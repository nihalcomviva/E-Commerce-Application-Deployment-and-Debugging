1. Frontend Accessibility
Issue: The frontend service is not accessible externally post-deployment.

Task: Diagnose the networking and Ingress configuration to ensure the frontend is reachable and performs as expected.
Steps:
Check Deployment and Service Status:
kubectl get deployments -n ecommerce
kubectl get services -n ecommerce
kubectl get pods -n ecommerce

Verify Service Type and Ports:
kubectl describe service frontend-service -n ecommerce

Test External Access:
curl http://<node-ip>:30080
Check Logs:
kubectl logs <frontend-pod-name> -n ecommerce
Inspect Ingress (if applicable):
kubectl get ingress -n ecommerce
kubectl describe ingress <ingress-name> -n ecommerce

2. Intermittent Backend-Database Connectivity
Issue: The backend services occasionally lose connection to the MongoDB cluster, causing request failures.

Task: Investigate and resolve potential causes such as network policies, service discovery issues, or MongoDB configuration.
Steps:

Check Backend and MongoDB Logs:
kubectl logs <backend-pod-name> -n ecommerce
kubectl logs <mongodb-pod-name> -n ecommerce

Verify MongoDB Service and Endpoints:
kubectl get services -n ecommerce
kubectl get endpoints -n ecommerce
Inspect Network Policies:
kubectl get networkpolicies -n ecommerce

Test Connectivity:
kubectl exec -it <backend-pod-name> -n ecommerce -- /bin/sh
nc -zv <mongodb-service-name> 27017


3. Order Processing Delays
Issue: Users report delays in order processing, suspecting issues with the RabbitMQ message queue.

Task: Analyze and optimize the message queue setup to ensure efficient message processing and minimal latency.

Steps:

Check RabbitMQ Status:
kubectl get pods -l app=rabbitmq -n ecommerce
kubectl get services -l app=rabbitmq -n ecommerce

Inspect RabbitMQ Logs:
kubectl logs <rabbitmq-pod-name> -n ecommerce

Monitor RabbitMQ Performance:
Use RabbitMQ management tools (e.g., RabbitMQ Management Plugin).
Review Resource Limits:
kubectl describe pod <rabbitmq-pod-name> -n ecommerce

Analyze Queue Configuration:
kubectl exec -it <rabbitmq-pod-name> -n ecommerce -- /bin/sh
rabbitmqctl list_queues

Test Message Flow:
Send and consume messages manually.
